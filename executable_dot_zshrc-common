# .zshrc common
#
# These features are common across systems,
# and are not tied to specific systems (beyond installed plugins)

# Path to your oh-my-zsh installation.
#export ZSH="/home/connor/.oh-my-zsh"
export ZSH=$HOME/.oh-my-zsh
fpath+=~/.zfunc

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME=""

# Some custom functionality
GIT_AUTO_FETCH_INTERVAL=30

# Some Vi management
VI_MODE_RESET_PROMPT_ON_MODE_CHANGE=true
VI_MODE_SET_CURSOR=true

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  archlinux
  colorize
  command-not-found
  common-aliases
  copyfile
  cp
  fast-syntax-highlighting
  git
  git-auto-fetch
  git-escape-magic
  gulp
  history
  jsontools
  lol
  ng
  npm
  pj
  sudo
  themes
	tmux
#  ubuntu
  vi-mode
  vscode
  zsh-autosuggestions
)

ZSH_TMUX_AUTOSTART=true
ZSH_TMUX_UNICODE=true
#ZSH_TMUX_FIXTERM=false

source $ZSH/oh-my-zsh.sh

# Preferred editor for local and remote sessions
export EDITOR='nvim'
alias e=$EDITOR

# changes to blinking bar
echo -e -n "\x1b[\x35 q" 

## Set up the powerline-go bar
function powerline_precmd() {
	MODULES_LEFT="ssh,host,cwd"
	MODULES_RIGHT="git"
	ALIASES="~/dev/utas/@mylo-mate=MyLO-MATE,~/dev/utas/myresults=MyResults"
	CWD_MODE="fancy"
	THEME="gruvbox"

	ARGS=(
		"-east-asian-width"
		"-shell zsh"
		#"-newline"
		"-hostname-only-if-ssh"
		"-path-aliases $ALIASES"
		"-cwd-mode $CWD_MODE"
		"-modules $MODULES_LEFT"
		"-modules-right $MODULES_RIGHT"
		"-theme $THEME"
		"-vi-mode $VI_KEYMAP"
	)

	#echo "powerline-go$(printf " %s" "${ARGS[@]}")"
	eval $(powerline-go$(printf " %s" "${ARGS[@]}") -eval)
}


function fe() { 
  editpath=$(find . -type f | fzf)
  if [[ "$editpath" != "" ]]; then
    $EDITOR $editpath
  fi
}

function install_powerline_precmd() {
  for s in "${precmd_functions[@]}"; do
    if [ "$s" = "powerline_precmd" ]; then
      return
    fi
  done
  precmd_functions+=(powerline_precmd)
}

if [ "$TERM" != "linux" ]; then
    install_powerline_precmd
fi

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

consumption () {
 sudo du -chax --max-depth=1 $1 | grep -E "^[0-9\.]*[MG]"
}

alias serve="python3 -m http.server"
alias mkdir="mkdir -p"
# alias todo="nvim -S ~/.notes/notes.vim"
unalias -m fd
# alias ssh="kitty +kitten ssh"

alias ls='ls -GhvX --group-directories-first --color=auto'
alias l='ls -lGh1vX --group-directories-first --color=auto'
alias ll='ls -lAGh1vX --group-directories-first --color=auto'
alias dc='docker-compose'
alias sizeof='du -sh --apparent-size'

claim () { sudo chown -R $USER:$USER $1 }
mkcd () { mkdir -p $1 && cd $1 }

# Set up fuzzyfinder so that it ignores things in .git and node_modules
export FZF_DEFAULT_COMMAND='rg --files --follow'


rollback_update() {
	if [[ $1 == '' ]]; then
		print 'Date must be supplied, relative or absolute accepted.'
		return
	fi

	# Get a unique ID to keep our good mirrorlist 
	timestamp=$(date +%s)

	# Rename the mirrorlist with our timestamp
	sudo mv /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist."$timestamp"

	# Create a new mirrorlist file to tee into
	sudo touch /etc/pacman.d/mirrorlist

	# Get a date object from the timestamp, as year month and day
	year=$(date --date $1 "+%Y")
	month=$(date --date $1 "+%m")
	day=$(date --date $1 "+%d")

	# Tee the archive of the mirror into the mirrorlist file
	echo "Server=https://archive.archlinux.org/repos/$year/$month/$day/\$repo/os/\$arch" | sudo tee /etc/pacman.d/mirrorlist

	# Force pacman to update the cache (yy forces it to refetch even if it considers itself up to date)
	# and uu forces it to allow packages to downgrade
	sudo pacman -Syyuu

	# Once the downgrade is done, revert our changes to the mirrorlist
	sudo rm /etc/pacman.d/mirrorlist
	sudo mv /etc/pacman.d/mirrorlist."$timestamp" /etc/pacman.d/mirrorlist
	
	# Update the mirrorlist, but not the packages themselves
	sudo pacman -Syy
}


# Remove directory background colours to ensure that values are readable
eval "$(dircolors -p | \
    sed 's/ 4[0-9];/ 01;/; s/;4[0-9];/;01;/g; s/;4[0-9] /;01 /' | \
    dircolors /dev/stdin)"

# Allow file watching and recompiling
function on_file_change() {
  inotifywait -m -r -e create,close_write,moved_to --format %e/%w%f . |
  while IFS=/ read -r events file; do
    if [ ! -z `echo "$file" | grep -E "$1$"` ]; then
      printf '[%s] %s\n'  "$(date +"%T.%N")" "$file updated"
      eval "$2"
    fi
  done
}

clean_path() {
  export PATH=$(echo $PATH | sed 's|:|\n|g' | awk '!x[$0]++' | sed ':a; N; $!ba; s|\n|:|g')
}

files() {
	DIR=${1:-$PWD}
	REF=$(wslpath -w "$DIR")
	explorer.exe "$REF"
}
